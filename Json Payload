// Add these libraries at the top of your sketch
#include <ArduinoJson.h>  // For JSON creation
#include <HTTPClient.h>   // For HTTP POST requests
#include <WiFi.h>         // For WiFi connection

// ============ WiFi and Oracle APEX Configuration ============
const char* ssid = "YOUR_SSID";                    // Replace with your WiFi network name
const char* password = "YOUR_PASSWORD";            // Replace with your WiFi password
const char* oracleApexUrl = "http://YOUR_APEX_DOMAIN/apex/rest/YOUR_ENDPOINT";  // Replace with your APEX REST endpoint

unsigned long reading_id = 1;  // Auto-increment counter for readings

// ============ WiFi Connection Function ============
void connectToWiFi() {
  Serial.println("\nConnecting to WiFi...");
  WiFi.begin(ssid, password);
  
  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < 20) {
    delay(500);
    Serial.print(".");
    attempts++;
  }
  
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\n✓ WiFi Connected!");
    Serial.print("IP Address: ");
    Serial.println(WiFi.localIP());
  } else {
    Serial.println("\n❌ WiFi Connection Failed!");
  }
}

// ============ Post Sensor Data to Oracle APEX ============
void postSensorDataToApex() {
  // Only proceed if WiFi is connected
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("⚠ WiFi not connected. Skipping data post.");
    return;
  }
  
  // Create JSON document
  StaticJsonDocument<512> doc;
  
  // Read all sensor values
  float bmp_temp = bmp.readTemperature();
  float bmp_pressure = bmp.readPressure() / 100.0F;
  float bmp_altitude = bmp.readAltitude(baselinePressure);
  
  float dht_humidity = dht.readHumidity();
  float dht_temp = dht.readTemperature();
  
  int flame_value = analogRead(FLAME_SENSOR_PIN);
  int light_value = analogRead(LDR_PIN);
  
  int mq135_value = analogRead(MQ135_PIN);
  int mq135_drop_value = mq135_value - mq135_baseline;
  
  int mq2_value = analogRead(MQ2_PIN);
  int mq2_drop_value = mq2_value - mq2_baseline;
  
  int mq7_value = analogRead(MQ7_PIN);
  int mq7_drop_value = mq7_value - mq7_baseline;
  
  unsigned long current_time = millis();
  
  // Populate JSON document
  doc["temperature_bmp280"] = bmp_temp;
  doc["temperature_dht22"] = dht_temp;
  doc["pressure"] = bmp_pressure;
  doc["altitude"] = bmp_altitude;
  doc["humidity"] = dht_humidity;
  
  doc["flame_raw"] = flame_value;
  doc["light_raw"] = light_value;
  
  doc["mq135_raw"] = mq135_value;
  doc["mq135_baseline"] = mq135_baseline;
  doc["mq135_drop"] = mq135_drop_value;
  
  doc["mq2_raw"] = mq2_value;
  doc["mq2_baseline"] = mq2_baseline;
  doc["mq2_drop"] = mq2_drop_value;
  
  doc["mq7_raw"] = mq7_value;
  doc["mq7_baseline"] = mq7_baseline;
  doc["mq7_drop"] = mq7_drop_value;
  
  doc["timestamp"] = current_time;
  doc["reading_id"] = reading_id++;
  
  // Serialize JSON to string
  String jsonString;
  serializeJson(doc, jsonString);
  
  // Print to Serial for debugging
  Serial.println("\n📤 Posting to Oracle APEX:");
  serializeJsonPretty(doc, Serial);
  
  // Send HTTP POST request
  HTTPClient http;
  http.begin(oracleApexUrl);
  http.addHeader("Content-Type", "application/json");
  
  int httpResponseCode = http.POST(jsonString);
  
  if (httpResponseCode > 0) {
    Serial.print("✓ HTTP Response code: ");
    Serial.println(httpResponseCode);
    
    if (httpResponseCode == 200 || httpResponseCode == 201) {
      Serial.println("✓ Data successfully posted to Oracle APEX!");
    } else {
      String response = http.getString();
      Serial.print("Response: ");
      Serial.println(response);
    }
  } else {
    Serial.print("❌ Error code: ");
    Serial.println(httpResponseCode);
  }
  
  http.end();
  Serial.println();
}

// ============ INTEGRATION NOTES ============
/*
 * Add to your setup() function:
 *   connectToWiFi();
 * 
 * Replace your sensor reading section in loop() with:
 *   if (currentTime - lastReadTime >= READ_INTERVAL) {
 *     lastReadTime = currentTime;
 *     postSensorDataToApex();
 *   }
 * 
 * Configuration Steps:
 * 1. Update ssid and password with your WiFi credentials
 * 2. Get your Oracle APEX REST API endpoint URL from your APEX app
 * 3. Make sure your APEX table columns match the JSON field names exactly
 * 4. Test with Postman first to verify your APEX endpoint is working
 */
